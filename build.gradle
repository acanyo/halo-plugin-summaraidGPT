plugins {
    id 'java'
    id "com.github.node-gradle.node" version "7.0.2"
    id "io.freefair.lombok" version "8.0.1"
    id "run.halo.plugin.devtools" version "0.2.0"
}
group 'com.handsome.summary'
sourceCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
    maven { url 'https://s01.oss.sonatype.org/content/repositories/releases' }
    maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://repo.spring.io/milestone' }
    maven { name "Alibaba"; url 'https://maven.aliyun.com/repository/public' }
    maven { name "Bstek"; url 'https://nexus.bsdn.org/content/groups/public/' }

}
ext {
    langchain4jVersion = '1.0.0-beta3'
}

dependencies {
    implementation platform('run.halo.tools.platform:plugin:2.20.0-SNAPSHOT')
    compileOnly 'run.halo.app:api'
    implementation 'cn.hutool:hutool-all:5.8.16'
    testImplementation 'run.halo.app:api'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation "dev.langchain4j:langchain4j:${langchain4jVersion}"
//    implementation "dev.langchain4j:langchain4j-spring-boot-starter:${langchain4jVersion}"
    implementation "dev.langchain4j:langchain4j-open-ai:${langchain4jVersion}"
    implementation "dev.langchain4j:langchain4j-community:${langchain4jVersion}"
    implementation "dev.langchain4j:langchain4j-community-zhipu-ai:${langchain4jVersion}"
    implementation "dev.langchain4j:langchain4j-community-qianfan:${langchain4jVersion}"
    implementation "dev.langchain4j:langchain4j-community-dashscope:${langchain4jVersion}"
    implementation "dev.langchain4j:langchain4j-google-ai-gemini:${langchain4jVersion}"
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
}

node {
    nodeProjectDir = file("${project.projectDir}/ui")
}

tasks.register('buildFrontend', PnpmTask) {
    args = ['build']
    dependsOn('installDepsForUI')
}

tasks.register('installDepsForUI', PnpmTask) {
    args = ['install']
}

build {
    // build frontend before build
    tasks.named('compileJava').configure {
        dependsOn('buildFrontend')
    }
}

halo {
    version = '2.20'
    debug = true
    suspend = true
}
